@author: salquicira
"""

import cv2
from ultralytics import YOLO

# Initialize YOLOv8 and background subtractor
model = YOLO('yolov8n.pt')
back_sub = cv2.createBackgroundSubtractorMOG2(history=500, varThreshold=100, detectShadows=True)


cap = cv2.VideoCapture(0)
cap.set(3, 640)
cap.set(4, 480)

while True:
       
    ret, frame = cap.read()
    fg_mask = back_sub.apply(frame)

    # Detect objects with YOLOv8
    results = model(frame)
    moving_objects = []
    for r in results:   
        boxes = r.boxes
        for box in boxes:
            x1, y1, x2, y2 = box.xyxy[0]
            x1, y1, x2, y2 = int(x1), int(y1), int(x2), int(y2) # convert to int values 
        # detect motion with MOG2 and YOLO
            if fg_mask[y1:y2, x1:x2].mean() > 05:  # Adjust the threshold value as needed
                moving_objects.append((x1, y1, x2, y2, box.conf, box.cls))
                cv2.rectangle(frame, (x1, y1), (x2, y2), (255, 0, 255), 3)
    cv2.imshow('Webcam', frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
cap.release()
cv2.destroyAllWindows()
